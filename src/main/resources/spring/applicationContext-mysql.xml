<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-lazy-init="true">
	
	<description>Spring MYSQL配置文件 </description>
	
	<!-- JDBC配置 -->			
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="maxWait" value="100" />

		<!-- 连接Idle一个小时后超时 -->
		<property name="testWhileIdle" value="true"></property>
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />
		<property name="validationQuery" value="SELECT NOW()"></property>
	</bean>
	
	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"  lazy-init="false">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mybatis/configuration.xml" />  
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/mybatis/mapper/*Mapper.xml" />
		<property name="failFast" value="true" />
	</bean>
	
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 以AspectJ方式 定义 AOP -->
	<aop:config proxy-target-class="true">
	  <!-- 事务拦截器 -->
	  <aop:advisor
	      pointcut="(execution(* com.airlab.musicplayer.service..*.*(..)))"
	      advice-ref="txAdvice" />
	</aop:config>
	
 	<tx:advice id="txAdvice">
		<tx:attributes>
			<tx:method name="count*" propagation="SUPPORTS"
				rollback-for="" read-only="true" no-rollback-for="" />
			<tx:method name="get*" propagation="SUPPORTS"
				rollback-for="" read-only="true" no-rollback-for="" />
			<tx:method name="query*" propagation="SUPPORTS"
				rollback-for="" read-only="true" no-rollback-for="" />
			<tx:method name="find*" propagation="SUPPORTS"
				rollback-for="" read-only="true" no-rollback-for="" />	
			<tx:method name="select*" propagation="SUPPORTS"
				rollback-for="" read-only="true" no-rollback-for="" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="java.lang.Exception"
				no-rollback-for="" />
		</tx:attributes>
	</tx:advice> 
</beans>
